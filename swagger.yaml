swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /transactions:
    get:
      tags:
        - Transactions
      summary: Retrieve all transactions for the current month
      description: Returns a list of all transactions for the current month
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
          type: string
      responses:
        "200":
          description: Success. Returns a list of transactions
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "404":
          description: No transactions found for the current month
    post:
      tags:
        - Transactions
      summary: Add a new transaction
      description: Adds a new transaction.
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
          type: string
        - in: body
          name: body
          description: Data for the new transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionInput"
      responses:
        "201":
          description: Success. Returns details of the new transaction
          schema:
            $ref: "#/definitions/Transaction"
          example:
            id: "12345"
            montant: 1200.50
            date: "2023-02-01T10:30:00Z"
            type: "débit"
            libelle: "Achat de nourriture pour animaux"
        "400":
          description: Invalid request.
        "401":
          description: Unauthorized.
        "500":
          description: Internal server error.
  /transactions/{id}:
    get:
      tags:
        - Transactions
      summary: Retrieve details of a transaction
      description: Returns details of a transaction based on its ID.
      parameters:
        - in: path
          name: id
          description: Transaction ID
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authentication token
          required: true
          type: string
      responses:
        "200":
          description: Transaction details.
          schema:
              $ref: "#/definitions/Transaction"
        "404":
          description: Transaction not found.
    patch:
      tags:
        - Transactions
      summary: Modify an existing transaction
      description: Modifies missing information of an existing transaction.
      parameters:
        - in: path
          name: id
          description: Transaction ID
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authentication token
          required: true
          type: string
        - in: body
          name: body
          description: Data for the transaction to modify
          required: true
          schema:
              $ref: "#/definitions/TransactionPatch"
      responses:
        "200":
          description: Success. Returns details of the modified transaction.
          schema:
            $ref: "#/definitions/Transaction"
        "404":
          description: Transaction not found.
    delete:
      tags:
        - Transactions
      summary: Supprimer une transaction existante
      description: Supprime une transaction existante à partir de son identifiant.
      parameters:
        - in: path
          name: id
          description: Identifiant de la transaction
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Token d'authentification
          required: true
          type: string
      responses:
        "204":
          description: Succès. La transaction a été supprimée.
        "404":
          description: Transaction introuvable.
        "401":
          description: Non autorisé.
        "500":
          description: Erreur serveur interne.


  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Identifiant de la transaction.
      montant:
        type: number
        description: Montant de la transaction.
      date:
        type: string
        format: date-time
        description: Date de la transaction.
      type:
        type: string
        description: Type de la transaction (débit ou crédit).
      libelle:
        type: string
        description: Libellé de la transaction.
    example:
      id: "1234"
      montant: 1100.50
      date: "2023-02-23T15:56:00Z"
      type: "débit"
      libelle: "Achat de nourriture pour animaux"
  TransactionPatch:
    type: object
    properties:
      libelle:
        type: string
        description: Libellé de la transaction
    example:
      libelle: "Achat de nourriture pour animaux"
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  TransactionInput:
    type: object
    properties:
      montant:
        type: number
        description: Montant de la transaction.
        example: 1200.50
      date:
        type: string
        format: date-time
        description: Date de la transaction.
        example: "2023-02-01T10:30:00Z"
      type:
        type: string
        description: Type de la transaction (débit ou crédit).
        example: "débit"
      libelle:
        type: string
        description: Libellé de la transaction.
        example: "Achat de nourriture pour animaux"
    required:
      - montant
      - date
      - type

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
